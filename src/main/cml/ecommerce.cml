ContextMap EcomerceMap {
  
  contains Productos
  contains Compras
  contains Pagos
  contains Envios
  contains Marketing

  /* Define the context relationships: */
  Productos Customer-Supplier Compras
  Compras[D]<-[U]Pagos //Relación Conformist donde pagos se adopta a las compras
  Envios[D,ACL]<-[U]Compras //Relacion Anticoorupcion Layer Compras(Dominante)Envios(Dependiente)
  Marketing[D]<-[U,OHS]Productos//Relacion OHS
  
  
}

/* Bounded Context Definitions */
BoundedContext Productos implements Products
BoundedContext Compras implements Comprs
BoundedContext Pagos implements Pags
BoundedContext Envios implements Envis
BoundedContext Marketing implements Products

/* Domain & Subdomain Definitions */
  // Se define un dominio llamado Ecomerce
Domain ECommerceContextMap  {

  // Se define un subdominio llamado Productos
  Subdomain Products {
    // Se define el tipo de subdominio: CORE_DOMAIN, SUPPORTING_DOMAIN o GENERIC_SUBDOMAIN
    type CORE_DOMAIN
    domainVisionStatement = "Description of subdomain"
    
  }
  Subdomain Comprs {
    type CORE_DOMAIN
  }

   Subdomain Pags {
    type SUPPORTING_DOMAIN
  }

   Subdomain Envis {
    type SUPPORTING_DOMAIN
  }
}
  


// Se define el contexto acotado de Productos
BoundedContext Productos {

 Module Producto{
  Aggregate Producto{// Se definen las entidades del contexto
    Entity Producto 
    // Se definen los atributos de la entidad
    ValueObject id
    ValueObject nombre
    ValueObject precio
    ValueObject categoria
    ValueObject descripcion
    ValueObject imagen
  
  } 
 }
  
}

// Se repite el mismo patrón para los otros contextos acotados
BoundedContext Compras {
  Module Compra{
    Aggregate Compra{

    Entity Compra 

        ValueObject id
        ValueObject usuario
        ValueObject <Producto> productos
        ValueObject total
        ValueObject estado
  
    }
  }
 
}

BoundedContext Pagos {
  Module{
    Aggregate Pago{
         Entity Pago {
            ValueObject id
            Compras compra
            ValueObject metodo
            BigDecimal monto
            Boolean confirmacion
  }
    }
  }
 
}

BoundedContext Envios {
 Module Envio{
  Aggregate Envio{
    Entity Envio 
      ValueObject id
      Compra compra
      ValueObject direccion
      Date fecha
      ValueObject seguimiento
  
  }
 }
  
}

BoundedContext Marketing {
  // Se define el tipo de contexto: aplicación, dominio o infraestructura
  type APPLICATION
  
  // Se define la tecnología de implementación: monolito, microservicio, etc.
  implementationTechnology "Microservice"
  
  // Se define la API que expone el contexto
  ServiceContract MarketingAPI {
    // Se define el tipo de API: REST, GraphQL, etc.
    type REST
    
    // Se definen los recursos que ofrece la API
    Resource Campañas {
      // Se definen los métodos HTTP que soporta el recurso
      methods GET, POST, PUT, DELETE
      
      // Se definen los parámetros que acepta el recurso
      parameters id, nombre, objetivo, presupuesto, duracion, estado
      
      // Se definen las respuestas que devuelve el recurso
      responses 200, 201, 400, 404, 500
    }
    
    Resource Anuncios {
      methods GET, POST, PUT, DELETE
      parameters id, campaña, producto, mensaje, imagen, canal, metricas
      responses 200, 201, 400, 404, 500
    }
    
    Resource Ofertas {
      methods GET, POST, PUT, DELETE
      parameters id, producto, precio, descuento, fecha, stock
      responses 200, 201, 400, 404, 500
    }
    
    Resource Cupones {
      methods GET, POST, PUT, DELETE
      parameters id, codigo, valor, fecha, condiciones
      responses 200, 201, 400, 404, 500
    }
  }
  
  // Se definen las entidades del contexto
  Entity Campaña {
    // Se definen los atributos de la entidad
    String id
    String nombre
    String objetivo
    BigDecimal presupuesto
    Date duracion
    String estado
    List<Anuncio> anuncios
  }
  
  Entity Anuncio {
    String id
    Campaña campaña
    Producto producto
    String mensaje
    String imagen
    String canal
    Map<String, Integer> metricas
  }
  
  Entity Oferta {
    String id
    Producto producto
    BigDecimal precio
    BigDecimal descuento
    Date fecha
    Integer stock
  }
  
  Entity Cupon {
    String id
    String codigo
    BigDecimal valor
    Date fecha
    String condiciones
  }
}